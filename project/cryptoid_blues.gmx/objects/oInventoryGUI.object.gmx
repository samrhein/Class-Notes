<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-22</depth>
  <persistent>0</persistent>
  <parentName>oGUI</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;10;i+=1){
    inv_item[i] = instance_create(-100,-100,oPlayer1.inventory[0,i])
}


current_slot=0

for(i=0;i&lt;12;i+=1) {
    inv_slot[i] = instance_create(-100,-100,oSlotInventory)
}

draw_set_color( c_white )
draw_set_font( munro )
draw_set_halign( fa_right )

addback_inv=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if a larger amount of material is dropped than an item requires, this refills the inventory
//with the remaining material (addback is sent from oRecipeGUI)
for(i=0;i&lt;oPlayer1.potential_inv;i+=1){
        if inv_item[i].addback = true {
            oPlayer1.inventory[1,i]= addback_inv
            inv_item[i].addback = false
            addback_inv=0
        }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw inventory slots
for(i=0;i&lt;12;i+=1) {
    //move slots that aren't potential
    if(i&gt;=oPlayer1.potential_inv){
        inv_slot[i].x=-1000
    }else{
    //draw potential slots
    inv_slot[i].x=view_xview[0]+12+i*54
    inv_slot[i].y=view_yview[0]+global.winH-60
    //draw inventory items only if they have a quantity
    if oPlayer1.inventory[1,i] != 0 {
        //only drag inventory materials
        if inv_item[i].mat_drag=false {
            inv_item[i].x=view_xview[0]+12+current_slot*54
            inv_item[i].y=view_yview[0]+global.winH-60
        }
        //increase slot being currently drawn into
        current_slot+=1
        
        
        //it the current item in inventory was dropped for building, send quantity + material info to oRecipeGUI
        if inv_item[i].subtract_inv = true {
            oRecipeGUI.subtract_quan=oPlayer1.inventory[1,i]
            oRecipeGUI.subtract_invID=inv_item[i].mat_under
            inv_item[i].subtract_inv = false
        }
        
   } else {
        inv_item[i].x=-1000
   }
   }
}
current_slot=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;oPlayer1.potential_inv;i+=1) {
    //if the item in inventory has a quantity draw it
    if oPlayer1.inventory[1,i] != 0 {
        if inv_item[i].mat_drag=false {
            draw_text( view_xview[0]+56+current_slot*54, view_yview[0]+global.winH-46, string(oPlayer1.inventory[1,i]) )
        } else {
            draw_text( mouse_x+22, mouse_y-10, string(oPlayer1.inventory[1,i]) )
        }
        //increase slot being currently drawn into
        current_slot+=1
   }
}
current_slot=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
