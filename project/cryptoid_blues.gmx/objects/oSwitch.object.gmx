<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSwitch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
switch_activate = false

this_machine = oPlayer1.new_machine
new_wire[0]=this_machine
new_wire2[0]=this_machine
i=1
k=1
draw_halfx=true
draw_halfy=true
final_i=0
final_k=0

//set position of machine relative to switch, starting with 1 in upper left moving clockwise
if this_machine.x &lt; id.x {
    if this_machine.y &lt; id.y {
        rel_pos = 1
    } else {
        rel_pos = 4
    }
} else {
    if this_machine.y &lt; id.y {
        rel_pos = 2
    } else {
        rel_pos = 3
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if switch_activate = true {
    image_index = 1
} else {
    image_index = 0
}

//draw everything loop
for (p=0;p&lt;30;p+=1){

//create wire horizontally from machine
if (rel_pos = 1 or rel_pos = 4) and x &gt; new_wire[i-1].x+24 {
    new_wire[i] = instance_create(new_wire[i-1].x+24,this_machine.y,oWireHalf)
    with new_wire[i] {
        image_angle = 90
    }
    i += 1
} else if (rel_pos = 2 or rel_pos = 3) and x &lt; new_wire[i-1].x-24{
    new_wire[i] = instance_create(new_wire[i-1].x-24,this_machine.y,oWireHalf)
    with new_wire[i] {
        image_angle = 270
    }
    i += 1
} else {
    final_i  = i
}

//create wire vertically from end of horizontal wire yuck
if rel_pos = 2 and y &gt; new_wire2[k-1].y {
    new_wire2[k] = instance_create(x+24,new_wire2[k-1].y+24,oWireHalf)
    with new_wire2[k] {
        image_angle = 0
    }
    k += 1
} else if rel_pos = 1 and y &gt; new_wire2[k-1].y {
    new_wire2[k] = instance_create(x-24,new_wire2[k-1].y+24,oWireHalf)
    with new_wire2[k] {
        image_angle = 0
    }
    k += 1
} else if rel_pos = 4 and y &lt; new_wire2[k-1].y {
    new_wire2[k] = instance_create(x-24,new_wire2[k-1].y-24,oWireHalf)
    with new_wire2[k] {
        image_angle = 180
    }
    k += 1
} else if rel_pos = 3 and y &lt; new_wire2[k-1].y {
    new_wire2[k] = instance_create(x+24,new_wire2[k-1].y-24,oWireHalf)
    with new_wire2[k] {
        image_angle = 180
    }
    k += 1 
}

//draw single half wire from end of vertical wire to the switch
if (rel_pos = 1 or rel_pos = 4) and y = new_wire2[k-1].y and draw_halfy = true {
    new_wire2[k+1] = instance_create(x,new_wire2[k-1].y,oWireHalf)
    if rel_pos = 1 {
        with new_wire2[k+1] {
            image_angle = 90
        }
    } else if rel_pos = 4 {
        with new_wire2[k+1] {
            image_angle = 90
        }
    }
    draw_halfy = false
} else if (rel_pos = 2 or rel_pos = 3) and y = new_wire2[k-1].y and draw_halfy = true {
    new_wire2[k+1] = instance_create(x,new_wire2[k-1].y,oWireHalf)
    if rel_pos = 2 {
        with new_wire2[k+1] {
            image_angle = 270
        }
    } else if rel_pos = 3 {
        with new_wire2[k+1] {
            image_angle = 270
        }
    }
    draw_halfy = false
} else {
    final_k = k+1
}

}

//control wire animation
if switch_activate = true {
for(j=1;j&lt;final_i;j+=1){
    with (new_wire[j]){
        image_speed=1
    }
}
for(j=1;j&lt;final_k+1;j+=1){
    with (new_wire2[j]){
        image_speed=1
    }
}
with this_machine {
    image_speed=1
}
this_machine.pushing=true
} else {
for(j=1;j&lt;final_i;j+=1){
    with (new_wire[j]){
        image_speed=0
    }
}
for(j=1;j&lt;final_k+1;j+=1){
    with (new_wire2[j]){
        image_speed=0
    }
}
with this_machine {
    image_speed=0
}
this_machine.pushing=false
}

//celebrate
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsShapePoints/>
</object>
