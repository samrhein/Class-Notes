<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSquirrelRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>setCollisionBounds(-14,-7,14,7);
image_speed=0.4;
facing = 'right';
state = 'run';
launched=0;
debugphy = 'nope';
jump_pause=0;

var fix, inst;
fix = physics_fixture_create();
physics_fixture_set_box_shape(fix, 14, 7);
physics_fixture_set_density(fix, 0.1);
physics_fixture_set_linear_damping(fix, 0.7);
physics_fixture_set_angular_damping(fix, 1);
physics_fixture_set_collision_group(fix, 1);
inst = id;
physics_fixture_bind(fix, inst);
physics_fixture_delete(fix);

phy_fixed_rotation = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dead_squirrel = instance_create(x,y,oSquirrelDead)

if facing = 'left'
    dead_squirrel.sprite_index = sSquirrelDeadLeft
else
    dead_squirrel.sprite_index = sSquirrelDeadRight

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if isCollisionLeft(1)
{
  sprite_index=sSquirrelRight;
  facing = 'right';
}
if isCollisionRight(1)
{
  sprite_index=sSquirrelLeft;
  facing = 'left';
}


idle_chance = irandom(80);
jump_chance = irandom(60);

if jump_chance = 1 and state = 'run' and jump_pause=0 {
    state = 'jump';
    physics_apply_local_force(0, 0, 0, -60);
}

if state = 'jump' {
    jump_pause += 1;
}

if state = 'jump' and isCollisionBottom(3) and jump_pause &gt;= 10 {
    state = 'run';
    jump_pause = 0;
}

if idle_chance = 1 and state = 'run' {
    state = 'idle';
    idle_time = irandom_range(60,150);
    idle_ani = irandom(1);
}
if state = 'idle' {
    image_speed = 0.2;
    xVel=0;
    idle_time -= 1;
    if idle_time&lt;=0 {
        state = 'run';
        new_facing = irandom(1);
        if new_facing=1 {
            facing='right';
        } else {
            facing='left';
        }
    }
}

if state = 'run' {
    image_speed = 0.4;
    if abs(phy_speed_x) &lt; 3 {
    if facing = 'right' {
        physics_apply_local_force(0, 0, 10, 0);
    } else {
        physics_apply_local_force(0, 0, -10, 0);
    }
    }
}



if facing = 'right' {
    if state = 'idle' {
        if idle_ani = 1 {
            sprite_index = sSquirrelIdleRight1;
        } else {
            sprite_index = sSquirrelIdleRight2;
        }
    }
    if state = 'run'
        sprite_index = sSquirrelRight;
    if state = 'jump'
        sprite_index = sSquirrelJumpRight;

}

if facing = 'left' {
    if state = 'idle' {
       if idle_ani = 1 {
            sprite_index = sSquirrelIdleLeft1;
        } else {
            sprite_index = sSquirrelIdleLeft2;
        }
    }
    if state = 'run'
        sprite_index = sSquirrelLeft;
    if state = 'jump'
        sprite_index = sSquirrelJumpLeft;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.hurting=false
    other.hurting=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(view_xview[0]+global.winW-60,view_yview[0]+global.winH-200, debugphy   )
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.699999988079071</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>1</PhysicsObjectAngularDamping>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>36,0</point>
    <point>36,33</point>
    <point>0,33</point>
  </PhysicsShapePoints>
</object>
